[ 특징 ]
1. 컨테이너의 내부 원소를 가리키고 접근할 수 있어야 함 (*연산자 제공)
2. 다음 원소로 이동기능 / 모든 원소 순회 가능

[ 지원 함수 ]
begin(), end()를 통해 컨테이너의 시작과 끝을 가리키는 Iterator을 반환
이 begin, end의 범위는 [begin, end) 와 같다.
(즉, vector의 경우에는 end = begin + size와 같다.)
(또한 end()는 범위의 마지막 원소의 다음 원소를 가리키는 상태이다.)
(두 반복자 p, q가 같은 원소를 가리키면 원소가 없는 것과 마찬가지)

[ 연산자 ]
1. ++: 다음 원소로 이동 (Java의 next())
2. ==, !=: 순차열의 끝인지 확인 (Java의 hasNext())
3. *: 반복자가 가리키고 있는 객체를 반환

[ 종류 ]
1. 입력 반복자	: 현 위치의 원소를 1번만 읽을 수 있음
2. 출력 반복자	: 현 위치의 원소를 1번만 쓸 수 있음
3. 순방향 반복자	: 입출력이 가능한 반복자, 순방향으로 이동(++), 재할당 가능
4. 양방향 반복자	: 순방향 반복자 기능, 역방향으로 이동(--)
5. 임의 접근 반복자: 양방향 반복자 기능, +, -, +=, -=, [] 등 Random Access 연산이 가능한 반복자 

- 임의 접근 반복자 -> 양방향 반복자 -> 순방향 반복자 -> 입력, 출력 반복자

- 모든 컨테이너는 양방향 반복자 이상을 제공
  vector, deque는 임의 접근 반복자를 제공